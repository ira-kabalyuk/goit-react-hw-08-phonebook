{"version":3,"file":"static/js/997.46c9fd3e.chunk.js","mappings":";4NACA,EAAwB,qBAAxB,EAAqD,qBAArD,EAAiF,oBAAjF,EAA6G,qBAA7G,EAA0I,qBAA1I,EAA8K,uECIxKA,EAAQ,SAAHC,GAAqD,IAAhDC,EAAKD,EAALC,MAAOC,EAAQF,EAARE,SAAQC,EAAAH,EAAEI,QAAAA,OAAO,IAAAD,EAAC,GAAEA,EAAKE,GAASC,EAAAA,EAAAA,GAAAN,EAAAO,GACvD,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAaC,UAC3BC,EAAAA,EAAAA,MAAA,SAAOR,QAASA,EAASK,UAAWC,EAAaC,SAAA,EAC/CH,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAYC,SAAEV,KAC/BO,EAAAA,EAAAA,KAAA,SAAAK,EAAAA,EAAAA,GAAA,CAAOJ,UAAWK,IAAGJ,EAAcR,GAAYQ,IAAmBL,IACjEH,IAAYM,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAoBC,SAAC,uBAI3D,iFCdA,EAAwB,+BCElBI,EAAQ,SAAHf,GAAgB,IAAXgB,EAAIhB,EAAJgB,KACd,OACER,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAaC,SAAEK,GAElC,oHCNA,EAAuB,wDCCVC,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASA,SAASC,KAAM,EACxDC,EAAuB,SAAAH,GAAK,OAAIA,EAAMC,SAASA,SAASG,MAAO,EAC/DC,EAAuB,SAAAL,GAAK,OAAIA,EAAMC,SAASK,MAAO,EAEtDC,GAAyBC,EAAAA,EAAAA,IACpC,CAACT,EAAgBM,IACjB,SAACJ,EAAUK,GACR,OAAe,OAARL,QAAQ,IAARA,OAAQ,EAARA,EAAUK,QAAO,SAAAG,GAAO,OAC9BA,EAAQC,KAAKC,cAAcC,SAASN,EAAOO,OAAOF,cAAc,GACnE,sDCAGG,EAAc,WAElB,IAAAC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BL,EAAIO,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA4BJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAElBG,GAAWC,EAAAA,EAAAA,MAEXxB,GAAWyB,EAAAA,EAAAA,IAAY3B,GAoBvB4B,EAAe,SAAAC,GACnB,IAAAC,EAAwBD,EAAME,cAAtBpB,EAAImB,EAAJnB,KAAMqB,EAAKF,EAALE,MACD,SAATrB,GACFS,EAAQY,GAGG,WAATrB,GACFa,EAAUQ,EACd,EAaA,OACErC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEH,EAAAA,EAAAA,KAACO,EAAAA,EAAK,CAACC,KAAK,oBACZJ,EAAAA,EAAAA,MAAA,QAAMH,UAAWC,EAAawC,SATb,SAAAJ,GACnBA,EAAMK,iBAlCc,SAACvB,EAAMY,GAE3B,IAAMb,EAAU,CACdC,KAAAA,EACAY,OAAAA,GAGF,GAAY,OAARrB,QAAQ,IAARA,GAAAA,EAAUiC,MACZ,SAAAzB,GAAO,OAAIA,EAAQC,KAAKC,gBAAkBD,EAAKC,aAAa,IAE5D,OAAOwB,MAAM,GAADC,OAAI1B,EAAI,6BAGtBc,GAASa,EAAAA,EAAAA,IAAe5B,IAAU6B,SAC/BC,MAAK,SAACC,GAAWC,EAAAA,GAAAA,QAAc,YAADL,OAAaI,EAAK9B,KAAI,4BAA6B,IACjFgC,OAAM,SAAAC,GAAG,OAAIF,EAAAA,GAAAA,MAAYE,EAAI,GAClC,CAmBEC,CAAclC,EAAMY,GANpBH,EAAQ,IACRI,EAAU,GAOZ,EAKyD9B,SAAA,EACnDH,EAAAA,EAAAA,KAACT,EAAAA,EAAK,CAACE,MAAM,qBACXgD,MAAOrB,EACPmC,SAAUlB,EACVmB,KAAK,OACLpC,KAAK,OACLqC,MAAM,yIACNC,UAAQ,KAEV1D,EAAAA,EAAAA,KAACT,EAAAA,EAAK,CAACE,MAAM,uBACXgD,MAAOT,EACPuB,SAAUlB,EACVmB,KAAK,MACLpC,KAAK,SACLqC,MAAM,yIACNC,UAAQ,KAEV1D,EAAAA,EAAAA,KAAC2D,EAAAA,EAAM,CAACH,KAAK,SAAShD,KAAK,qBAKnC,ECnFA,EAAwB,sBCOhBoD,EAAS,WACf,IAAM1B,GAAWC,EAAAA,EAAAA,MAEXnB,GAASoB,EAAAA,EAAAA,IAAYrB,GAQ3B,OACEf,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAaC,UAC3BH,EAAAA,EAAAA,KAACT,EAAAA,EAAK,CAACE,MAAM,iBAAiB+D,KAAK,OAAOf,MAAOzB,EAAQuC,SARvC,SAAAjB,GAEpB,IAAMuB,GAASC,EAAAA,EAAAA,IAAUxB,EAAME,cAAcC,OAC7CP,EAAS2B,EACX,KAOF,gCCvBA,GAAgB,KAAO,0BAA0B,KAAO,0BAA0B,QAAU,6BAA6B,KAAO,0BAA0B,MAAQ,2BAA2B,KAAO,2BCe9LE,EAAc,WAElB,IAAM7B,GAAWC,EAAAA,EAAAA,MAEXrB,GAASsB,EAAAA,EAAAA,IAAYvB,GAErBmD,GAAmB5B,EAAAA,EAAAA,IAAYnB,IAEpCgD,EAAAA,EAAAA,YAAU,WACR/B,GAASgC,EAAAA,EAAAA,MACX,GAAG,CAAChC,IAGL,IAMMiC,EAAkBH,EAElBI,EAAYtD,IAAWuD,EAAAA,EAAAA,MACvBC,EAAaxD,IAAWuD,EAAAA,EAAAA,QAE9B,OACEjE,EAAAA,EAAAA,MAAA,OAAAD,SAAA,CACGmE,IAActE,EAAAA,EAAAA,KAACuE,EAAAA,EAAM,IACrBH,IAAapE,EAAAA,EAAAA,KAACwE,EAAAA,EAAK,CAAArE,SAAC,iCAEnBgE,EAAgBM,OAAS,GACzBzE,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,KAAYC,SACxBgE,EAAgBO,KAAI,SAAAlF,GAAA,IAAGmF,EAAEnF,EAAFmF,GAAIvD,EAAI5B,EAAJ4B,KAAMY,EAAMxC,EAANwC,OAAM,OACtC5B,EAAAA,EAAAA,MAAA,MAAIH,UAAWC,EAAAA,KAAYC,SAAA,EACzBC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAAA,KAAYC,SAAA,EAC1BC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEH,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAAA,MAAaC,SAAC,UAC/BH,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAAA,KAAYC,SAAEiB,QAE9BhB,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEH,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAAA,MAAaC,SAAC,YAC/BH,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAAA,OAAcC,SAAE6B,WAGnChC,EAAAA,EAAAA,KAAC2D,EAAAA,EAAM,CAACiB,QAAS,kBA9BHC,EA8ByBF,OA7BhDzC,GAAS4C,EAAAA,EAAAA,IAAiBD,IAAY7B,SACnCC,MAAK,SAACC,GAAWC,EAAAA,GAAAA,QAAc,YAADL,OAAaI,EAAK9B,KAAI,8BAA+B,IACnFgC,OAAM,SAAAC,GAAG,OAAIF,EAAAA,GAAAA,MAAYE,EAAI,IAHV,IAACwB,CA8B4B,EAAErE,KAAK,aAXjBmE,EAY5B,OAGP3E,EAAAA,EAAAA,KAACwE,EAAAA,EAAK,CAAArE,SAAC,qCAGjB,ECjEA,EAA0B,0BCyB1B,EAhBiB,WAEf,OACEH,EAAAA,EAAAA,KAAC+E,EAAAA,EAAO,CAAA5E,UACNC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAeC,SAAA,EAC7BH,EAAAA,EAAAA,KAACwB,EAAW,KACZpB,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEH,EAAAA,EAAAA,KAACO,EAAAA,EAAK,CAACC,KAAK,mBACZR,EAAAA,EAAAA,KAAC4D,EAAM,KACP5D,EAAAA,EAAAA,KAAC+D,EAAW,WAKtB,sBCxBA,OAOC,WACA,aAEA,IAAIiB,EAAS,CAAC,EAAEC,eAEhB,SAASC,IAGR,IAFA,IAAIC,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAUZ,OAAQW,IAAK,CAC1C,IAAIE,EAAMD,UAAUD,GAChBE,IACHH,EAAUI,EAAYJ,EAASK,EAAWF,IAE5C,CAEA,OAAOH,CACR,CAEA,SAASK,EAAYF,GACpB,GAAmB,kBAARA,GAAmC,kBAARA,EACrC,OAAOA,EAGR,GAAmB,kBAARA,EACV,MAAO,GAGR,GAAIG,MAAMC,QAAQJ,GACjB,OAAOJ,EAAWS,MAAM,KAAML,GAG/B,GAAIA,EAAIM,WAAaC,OAAOC,UAAUF,WAAaN,EAAIM,SAASA,WAAWtE,SAAS,iBACnF,OAAOgE,EAAIM,WAGZ,IAAIT,EAAU,GAEd,IAAK,IAAIY,KAAOT,EACXN,EAAOgB,KAAKV,EAAKS,IAAQT,EAAIS,KAChCZ,EAAUI,EAAYJ,EAASY,IAIjC,OAAOZ,CACR,CAEA,SAASI,EAAa9C,EAAOwD,GAC5B,OAAKA,EAIDxD,EACIA,EAAQ,IAAMwD,EAGfxD,EAAQwD,EAPPxD,CAQT,CAEqCyD,EAAOC,SAC3CjB,EAAWkB,QAAUlB,EACrBgB,EAAOC,QAAUjB,QAKhB,KAFwB,EAAF,WACtB,OAAOA,CACP,UAFoB,OAEpB,YAIF,CArEA","sources":["webpack://react-homework-template/./src/components/Input/Input.module.scss?f352","components/Input/Input.jsx","webpack://react-homework-template/./src/components/Title/Title.module.scss?ae23","components/Title/Title.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.scss?6b75","redux/contacts/contactsSlice.selectors.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.scss?573d","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.scss?e1a7","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/pages/Contacts/Contacts.module.scss?47b9","pages/Contacts/Contacts.jsx","../node_modules/classnames/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"block\":\"Input_block__RND5N\",\"label\":\"Input_label__U9NhE\",\"text\":\"Input_text__ui+m2\",\"input\":\"Input_input__k5Ctk\",\"error\":\"Input_error__1wKFK\",\"errorMessage\":\"Input_errorMessage__d5Tlu\"};","import React from 'react';\nimport cx from 'classnames';\n\nimport styles from './Input.module.scss';\n\nconst Input = ({label, hasError, htmlFor='', ...restProps}) => {\n  return (\n    <div className={styles.block}>\n      <label htmlFor={htmlFor} className={styles.label}>\n        <span className={styles.text}>{label}</span>\n        <input className={cx(styles.input, hasError && styles.error)} {...restProps} />\n        {hasError && <span className={styles.errorMessage}>incorrect data</span>}\n      </label>\n    </div>\n  );\n};\n\nexport { Input };","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Title_title__IlEm8\"};","import React from 'react';\nimport styles from './Title.module.scss';\n\nconst Title = ({text}) => {\n  return (\n    <h2 className={styles.title}>{text}</h2>\n  );\n};\n\nexport { Title };","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__zqkUM\",\"title\":\"ContactForm_title__Wh8oO\"};","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.contacts.items;\nexport const selectContactsStatus = state => state.contacts.contacts.status;\nexport const selectContactsFilter = state => state.contacts.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectContactsFilter],\n  (contacts, filter) => {\n     return contacts?.filter(contact =>\n      contact.name.toLowerCase().includes(filter.trim().toLowerCase())\n  )}\n);\n","import React, { useState } from 'react';\nimport styles from './ContactForm.module.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { apiPostContact } from '../../redux/contacts/contactsSlice';\nimport { selectContacts } from '../../redux/contacts/contactsSlice.selectors';\nimport { Input } from 'components/Input';\nimport { Button } from 'components/Button';\nimport { Title } from 'components/Title';\nimport { toast } from 'react-toastify';\n\n\nconst ContactForm = () => {\n  \n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n\n  const createContact = (name, number) => {\n    \n    const contact = {\n      name,\n      number,\n    };\n\n    if (contacts?.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()))\n    {\n      return alert(`${name} is already in phonebook`);\n    }    \n    \n    dispatch(apiPostContact(contact)).unwrap()\n      .then((data) => { toast.success(`Contact \"${data.name}\" was successfully added`); })\n      .catch(err => toast.error(err));\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    if (name === 'name') {\n      setName(value);\n    }\n\n    if (name === 'number')\n      setNumber(value);\n  };\n  \n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  \n  const handleSubmit = event => {\n    event.preventDefault();\n    createContact(name, number);\n    reset();\n  }  \n\n  return (\n    <div>\n      <Title text='Create contact'></Title>\n      <form className={styles.form} onSubmit={handleSubmit}>\n        <Input label='enter contact name'\n          value={name}\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <Input label='enter contact number'\n          value={number}\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />        \n        <Button type=\"submit\" text='Add Contact'></Button>\n      </form>\n    </div>\n    \n  );\n};\n\n\nexport { ContactForm };\n\n","// extracted by mini-css-extract-plugin\nexport default {\"block\":\"Filter_block__3tq-l\"};","import { useDispatch, useSelector } from 'react-redux';\n\nimport { setFilter } from '../../redux/contacts/contactsSlice';\nimport { selectContactsFilter } from '../../redux/contacts/contactsSlice.selectors';\nimport { Input } from 'components/Input';\n\nimport styles from './Filter.module.scss';\n\n  const Filter = () => {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(selectContactsFilter);\n\n   const changeFilter = event => {\n\n    const action = setFilter(event.currentTarget.value);\n    dispatch(action);\n  }\n\n  return (\n    <div className={styles.block}>\n      <Input label='Search contact' type=\"text\" value={filter} onChange={changeFilter} />  \n    </div>\n  );\n};\n\n\nexport { Filter };\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__lJuMM\",\"item\":\"ContactList_item__Hx051\",\"message\":\"ContactList_message__SlrhM\",\"info\":\"ContactList_info__yhXwh\",\"label\":\"ContactList_label__XQMv1\",\"name\":\"ContactList_name__r7wZR\"};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { apiDeleteContact, apiGetContacts } from '../../redux/contacts/contactsSlice';\nimport {  \n  selectContactsStatus,\n  selectFilteredContacts\n} from '../../redux/contacts/contactsSlice.selectors';\nimport { STATUSES } from 'utils/constants';\n\nimport { Loader } from 'components/Loader';\nimport { Error } from 'components/Error';\n\nimport styles from './ContactList.module.scss';\nimport { Button } from 'components/Button';\nimport { toast } from 'react-toastify';\n\nconst ContactList = () => {\n\n  const dispatch = useDispatch();\n\n  const status = useSelector(selectContactsStatus);\n\n  const filteredContacts = useSelector(selectFilteredContacts)\n\n   useEffect(() => {\n     dispatch(apiGetContacts())\n   }, [dispatch])\n  \n \n  const onDeleteContact = (contactId) => {\n    dispatch(apiDeleteContact(contactId)).unwrap()\n      .then((data) => { toast.success(`Contact \"${data.name}\" was successfully deleted`); })\n      .catch(err => toast.error(err));;\n  }\n\n  const visibleContacts = filteredContacts; // мемоізація\n\n  const showError = status === STATUSES.error;\n  const showLoader = status === STATUSES.pending;\n\n  return (\n    <div>\n      {showLoader && <Loader />}\n      {showError && <Error>Oops, some error occurred...</Error>}\n\n      {(visibleContacts.length > 0 ) ? (\n        <ul className={styles.list}>\n          {visibleContacts.map(({ id, name, number }) => (\n            <li className={styles.item} key={id}>\n              <div className={styles.info}>\n                <div>\n                  <span className={styles.label}>Name</span>\n                  <p className={styles.name}>{name}</p>\n                </div>\n                <div>\n                  <span className={styles.label}>Number</span>\n                  <p className={styles.number}>{number}</p>\n                </div>\n              </div>\n             <Button onClick={() => onDeleteContact(id)} text='Delete' />\n            </li>\n          ))}\n        </ul>\n      ) : <Error>Contact not found &#129335;</Error>}\n    </div>\n  );\n};\n\nexport { ContactList };\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Contacts_wrapper__A2q+k\"};","\nimport { Section } from 'components/Section';\n\nimport { ContactForm } from 'components/ContactForm';\nimport { Filter } from 'components/Filter';\nimport { ContactList } from 'components/ContactList';\nimport { Title } from 'components/Title';\n\nimport styles from './Contacts.module.scss';\n\nconst Contacts = () => {\n  \n  return (\n    <Section>\n      <div className={styles.wrapper}>\n        <ContactForm/>\n        <div>\n          <Title text='Your contacts'></Title>\n          <Filter />\n          <ContactList/>\n        </div>\n      </div>\n    </Section>\n  );\n};\n\nexport default Contacts;","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":["Input","_ref","label","hasError","_ref$htmlFor","htmlFor","restProps","_objectWithoutProperties","_excluded","_jsx","className","styles","children","_jsxs","_objectSpread","cx","Title","text","selectContacts","state","contacts","items","selectContactsStatus","status","selectContactsFilter","filter","selectFilteredContacts","createSelector","contact","name","toLowerCase","includes","trim","ContactForm","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","dispatch","useDispatch","useSelector","handleChange","event","_event$currentTarget","currentTarget","value","onSubmit","preventDefault","find","alert","concat","apiPostContact","unwrap","then","data","toast","catch","err","createContact","onChange","type","title","required","Button","Filter","action","setFilter","ContactList","filteredContacts","useEffect","apiGetContacts","visibleContacts","showError","STATUSES","showLoader","Loader","Error","length","map","id","onClick","contactId","apiDeleteContact","Section","hasOwn","hasOwnProperty","classNames","classes","i","arguments","arg","appendClass","parseValue","Array","isArray","apply","toString","Object","prototype","key","call","newClass","module","exports","default"],"sourceRoot":""}